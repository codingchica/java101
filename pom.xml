<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>codingchica</groupId>
    <artifactId>java101</artifactId>
    <version>0.1-SNAPSHOT</version>

    <name>java101</name>
    <description>This is a very simple Java project with a Maven build, which is intended to showcase different Java
        syntax, build, coding conventions and unit testing approaches.</description>
    <url>https://github.com/codingchica/java101</url>

    <developers>
        <developer>
            <id>codingchica</id>
        </developer>
    </developers>

    <mailingLists>
        <mailingList>
            <name>Coding Chica Blog</name>
            <archive>https://codingchica.com/topics/java-101/</archive>
            <otherArchives>
                <otherArchive>https://codingchica.com/</otherArchive>
            </otherArchives>
        </mailingList>
    </mailingLists>

    <scm>
        <connection>scm:git|https://github.com/codingchica/java101.git</connection>
        <developerConnection>scm:git|https://github.com/codingchica/java101.git</developerConnection>
        <url>https://github.com/codingchica/java101</url>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/codingchica/java101/issues</url>
    </issueManagement>

    <ciManagement>
        <system>github actions</system>
        <url>https://github.com/codingchica/java101/actions/workflows/maven.yml</url>
    </ciManagement>

    <properties>
        <!--
        argLine will be extended by jacoco-maven-plugin.
        Additional argLine values for maven-surefire-plugin can be set here.
        -->
        <argLine/>

        <findsecbugs.plugin.version>1.12.0</findsecbugs.plugin.version>

        <lombok.version>1.18.28</lombok.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--
        Since these properties are needed for both build and reporting spotbugs configuration,
        defining as properties for easier maintenance.
        -->
        <spotbugs.effort>Max</spotbugs.effort>
        <spotbugs.excludeFilterFile>build_config/spotbugs-exclude.xml</spotbugs.excludeFilterFile>
        <spotbugs.failThreshold>Low</spotbugs.failThreshold>
        <spotbugs.includeFilterFile>build_config/spotbugs-include.xml</spotbugs.includeFilterFile>
        <spotbugs.includeTests>true</spotbugs.includeTests>

        <spotless.maven.plugin.version>2.35.0</spotless.maven.plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>5.9.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
            <plugins>
                <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                    <configuration>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.1.2</version>
                    <configuration>
                        <!-- argLine will be set by jacoco-maven-plugin -->
                        <argLine>${argLine}</argLine>
                        <parallel>all</parallel>
                        <runOrder>random</runOrder>
                    </configuration>
                </plugin>
                <plugin>
                    <!--
                    https://www.eclemma.org/jacoco/trunk/doc/maven.html
                    https://www.eclemma.org/jacoco/trunk/doc/integrations.html
                    -->
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.10</version>
                    <executions>
                        <execution>
                            <id>prepare-ut</id>
                            <goals>
                                <!-- binds by default to the 'initialize' Maven lifecycle phase -->
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report-ut</id>
                            <goals>
                                <!-- binds by default to the 'verify' Maven lifecycle phase -->
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.build.directory}/ut-code-coverage</outputDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <id>check-ut</id>
                            <goals>
                                <!-- binds by default to the 'verify' Maven lifecycle phase -->
                                <goal>check</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <!-- Build breaker rules to enforce in order to get a successful build -->
                                    <rule>
                                        <!-- In each declared class. -->
                                        <element>CLASS</element>
                                        <limits>
                                            <limit>
                                                <!-- Individual instruction / command count (isn't impacted by formatting / line wrapping). -->
                                                <counter>INSTRUCTION</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>0.80</minimum>
                                            </limit>
                                            <limit>
                                                <!-- Branches of logic are things like individual true/false tests in an if / else / switch statement.  -->
                                                <counter>BRANCH</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>0.80</minimum>
                                            </limit>
                                        </limits>
                                    </rule>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.7.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.4.5</version>
                </plugin>
                <plugin>
                    <!-- https://spotbugs.github.io/spotbugs-maven-plugin/usage.html -->
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>4.7.2.1</version>
                </plugin>
                <plugin>
                    <!-- Source code cross-reference pages, also used for other reports. -->
                    <!-- https://maven.apache.org/jxr/maven-jxr-plugin/usage.html -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jxr-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <plugin>
                    <!-- static code analysis quality gates and reports -->
                    <!-- https://maven.apache.org/plugins/maven-pmd-plugin/usage.html -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>3.21.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <!--
                https://www.eclemma.org/jacoco/trunk/doc/maven.html
                https://www.eclemma.org/jacoco/trunk/doc/integrations.html
                -->
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <!-- use google configuration for now - to match the spotless maven plugin expectations.
                       TODO - Create our own configuration file and reference here
                    -->
                    <configLocation>google_checks.xml</configLocation>
                    <consoleOutput>true</consoleOutput>
                    <failsOnError>true</failsOnError>
                    <linkXRef>false</linkXRef>
                </configuration>
                <executions>
                    <execution>
                        <id>validate</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- https://maven.apache.org/plugins/maven-javadoc-plugin/ -->
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.5.0</version>
                <inherited>true</inherited>
                <configuration>
                    <failOnError>true</failOnError>
                    <failOnWarnings>true</failOnWarnings>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- https://github.com/diffplug/spotless/tree/main/plugin-maven -->
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${spotless.maven.plugin.version}</version>
                <inherited>true</inherited>
                <configuration>
                    <markdown>
                        <includes>
                            <!-- You have to set the target manually -->
                            <include>**/*.md</include>
                        </includes>
                        <flexmark/>
                    </markdown>
                    <java>
                        <!-- Cleanthat will refactor your code, but it may break your style: apply it before your formatter -->
                        <cleanthat/>

                        <googleJavaFormat>
                            <!-- GOOGLE or AOSP (optional) -->
                            <!-- https://github.com/google/google-java-format -->
                            <style>GOOGLE</style>
                            <!-- optional (requires at least 1.8) -->
                            <reflowLongStrings>true</reflowLongStrings>
                        </googleJavaFormat>

                        <!-- standard import order -->
                        <importOrder/>

                        <!-- Removing unused imports at the top of each file. -->
                        <removeUnusedImports/>

                        <!-- Fixes formatting of type annotations that may have occurred earlier in the formatting process. -->
                        <formatAnnotations/>
                    </java>
                    <pom>
                        <!-- These are the defaults, you can override if you want -->
                        <includes>
                            <include>pom.xml</include>
                        </includes>

                        <sortPom>
                            <!-- The encoding of the pom files -->
                            <encoding>UTF-8</encoding>
                            <!-- Should empty elements be expanded-->
                            <expandEmptyElements>false</expandEmptyElements>
                            <!-- Should a space be added inside self-closing elements-->
                            <spaceBeforeCloseEmptyElement>false</spaceBeforeCloseEmptyElement>
                            <!-- Keep empty lines -->
                            <keepBlankLines>true</keepBlankLines>
                            <!-- Indentation -->
                            <nrOfIndentSpace>4</nrOfIndentSpace>
                            <!-- Should empty lines be indented -->
                            <indentBlankLines>false</indentBlankLines>
                            <!-- Should schema locations be indented -->
                            <indentSchemaLocation>true</indentSchemaLocation>
                            <!--
                            Sort order of elements: https://github.com/Ekryd/sortpom/wiki/PredefinedSortOrderProfiles
                            recommended_2008_06 - The POM Code Convention that was chosen by Maven developers in 2008 (default for 3.0.0+)
                            -->
                            <predefinedSortOrder>recommended_2008_06</predefinedSortOrder>
                            <!-- Sort dependency exclusions: https://github.com/Ekryd/sortpom/wiki/SortDependencies-->
                            <sortDependencyExclusions/>
                            <!-- Sort properties -->
                            <sortProperties>true</sortProperties>
                            <!-- Sort plugin executions -->
                            <sortExecutions>false</sortExecutions>
                        </sortPom>
                    </pom>
                </configuration>
                <executions>
                    <execution>
                        <id>auto-style</id>
                        <goals>
                            <goal>apply</goal>
                        </goals>
                        <!-- Using validate phase, so this happens before enforce-style -->
                        <phase>validate</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <configuration>
                    <inputEncoding>${project.build.sourceEncoding}</inputEncoding>
                    <targetJdk>${maven.compiler.target}</targetJdk>
                </configuration>
                <executions>
                    <execution>
                        <!-- Checking for coding issues in main files. -->
                        <id>pmd-main</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>verify</phase>
                        <configuration>
                            <verbose>true</verbose>
                            <includeTests>false</includeTests>
                            <rulesets>
                                <ruleset>build_config/pmd-rules-main.xml</ruleset>
                            </rulesets>
                            <excludeFromFailureFile>build_config/pmd-exclude-pmd-check.properties</excludeFromFailureFile>
                        </configuration>
                    </execution>

                    <execution>
                        <!-- Checking for coding issues in test files. -->
                        <id>cpd-main</id>
                        <goals>
                            <goal>cpd-check</goal>
                        </goals>
                        <phase>verify</phase>
                        <configuration>
                            <verbose>true</verbose>
                            <includeTests>false</includeTests>
                            <rulesets>
                                <ruleset>build_config/pmd-rules-main.xml</ruleset>
                            </rulesets>
                            <excludeFromFailureFile>build_config/pmd-exclude-cpd-check.properties</excludeFromFailureFile>
                        </configuration>
                    </execution>

                    <execution>
                        <!-- Checking for code duplication (copy-paste detector) in main files. -->
                        <id>pmd-test</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>verify</phase>
                        <configuration>
                            <verbose>true</verbose>
                            <includeTests>true</includeTests>
                            <excludeRoots>
                                <excludeRoot>${basedir}/src/main/java</excludeRoot>
                            </excludeRoots>
                            <rulesets>
                                <ruleset>build_config/pmd-rules-test.xml</ruleset>
                            </rulesets>
                            <excludeFromFailureFile>build_config/pmd-exclude-pmd-check.properties</excludeFromFailureFile>
                        </configuration>
                    </execution>

                    <execution>
                        <!-- Checking for code duplication (copy-paste detector) in test files. -->
                        <id>cpd-test</id>
                        <goals>
                            <goal>cpd-check</goal>
                        </goals>
                        <phase>verify</phase>
                        <configuration>
                            <verbose>true</verbose>
                            <includeTests>true</includeTests>
                            <excludeRoots>
                                <excludeRoot>${basedir}/src/main/java</excludeRoot>
                            </excludeRoots>
                            <rulesets>
                                <ruleset>build_config/pmd-rules-test.xml</ruleset>
                            </rulesets>
                            <excludeFromFailureFile>build_config/pmd-exclude-cpd-check.properties</excludeFromFailureFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <configuration>
                    <!-- see also properties configured with spotbugs prefix -->
                    <plugins>
                        <plugin>
                            <!-- https://find-sec-bugs.github.io/bugs.htm -->
                            <groupId>com.h3xstream.findsecbugs</groupId>
                            <artifactId>findsecbugs-plugin</artifactId>
                            <version>${findsecbugs.plugin.version}</version>
                        </plugin>
                    </plugins>
                </configuration>
                <executions>
                    <execution>
                        <id>static-code-analysis</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <!-- The version is defined in the Build Plugin Management section. Also included by default. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
            </plugin>
            <plugin>
                <!-- Source code cross-reference pages, also used for other reports. -->
                <!-- https://maven.apache.org/jxr/maven-jxr-plugin/usage.html -->
                <!-- The version is defined in the Build Plugin Management section. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
            </plugin>
            <plugin>
                <!-- https://spotbugs.github.io/spotbugs-maven-plugin/usage.html -->
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <configuration>
                    <!-- see also properties configured with spotbugs prefix -->
                    <plugins>
                        <plugin>
                            <!-- https://find-sec-bugs.github.io/bugs.htm -->
                            <groupId>com.h3xstream.findsecbugs</groupId>
                            <artifactId>findsecbugs-plugin</artifactId>
                            <version>${findsecbugs.plugin.version}</version>
                        </plugin>
                    </plugins>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <configuration>
                    <inputEncoding>${project.build.sourceEncoding}</inputEncoding>
                    <targetJdk>${maven.compiler.target}</targetJdk>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
</project>
